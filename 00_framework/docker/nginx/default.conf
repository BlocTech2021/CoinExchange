worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    server {
        listen 8801;
        server_name 127.0.0.1;

        set $cors "http://127.0.0.1:8080";

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, x-auth-token, lang';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain';
                return 204;
            }

            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' $cors always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, x-auth-token, lang' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        location /market {
            client_max_body_size 5m;
            proxy_pass http://localhost:6004;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, x-auth-token, lang';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain';
                return 204;
            }

            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' $cors always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, x-auth-token, lang' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        location /exchange {
            client_max_body_size 5m;
            proxy_pass http://localhost:6003;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, x-auth-token, lang';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain';
                return 204;
            }

            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' $cors always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, x-auth-token, lang' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        location /uc {
            client_max_body_size 5m;
            proxy_pass http://localhost:6001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, x-auth-token, lang';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain';
                return 204;
            }

            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' $cors always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, x-auth-token, lang' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        location /admin {
            client_max_body_size 5m;
            proxy_pass http://localhost:6010;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, x-auth-token, lang';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain';
                return 204;
            }

            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' $cors always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, x-auth-token, lang' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        location /chat {
          client_max_body_size 5m;
          proxy_pass http://localhost:6008;
          proxy_set_header Host $host;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header X-Real-IP $remote_addr;

          # Handle preflight requests
          if ($request_method = 'OPTIONS') {
              add_header 'Access-Control-Allow-Origin' $cors;
              add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE';
              add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, x-auth-token, lang';
              add_header 'Access-Control-Allow-Credentials' 'true';
              add_header 'Content-Length' 0;
              add_header 'Content-Type' 'text/plain';
              return 204;
          }

          # Add CORS headers
          add_header 'Access-Control-Allow-Origin' $cors always;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE' always;
          add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, x-auth-token, lang' always;
          add_header 'Access-Control-Allow-Credentials' 'true' always;
      }

      location /otc {
          client_max_body_size 5m;
          proxy_pass http://localhost:6006;
          proxy_set_header Host $host;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header X-Real-IP $remote_addr;

          # Handle preflight requests
          if ($request_method = 'OPTIONS') {
              add_header 'Access-Control-Allow-Origin' $cors;
              add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE';
              add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, x-auth-token, lang';
              add_header 'Access-Control-Allow-Credentials' 'true';
              add_header 'Content-Length' 0;
              add_header 'Content-Type' 'text/plain';
              return 204;
          }

          # Add CORS headers
          add_header 'Access-Control-Allow-Origin' $cors always;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE' always;
          add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, x-auth-token, lang' always;
          add_header 'Access-Control-Allow-Credentials' 'true' always;
      }

      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
          root /usr/share/nginx/html;
      }
    }

}