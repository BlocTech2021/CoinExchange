version: '3.1'
services:
  mysql:
    image: mariadb:10.5.8
    ports:
        - "3306:3306"
    environment:
        MYSQL_ROOT_PASSWORD: rootPassword
    volumes:
        - mysql:/var/lib/mysql
        - .:/tmp/sql

  mongo:
    platform: linux/x86_64
    image: mongo:3.6.4
    ports:
        - "27017:27017"
    volumes:
      - 'mongo:/data/db'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - redis:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    volumes: 
      - zoo_data:/var/lib/zookeeper/data
      - zoo_log:/var/lib/zookeeper/log
    
  kafka:
    image: confluentinc/cp-kafka:5.4.1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes: 
      - kafka:/var/lib/kafka/data

  nginx:
    build: ./nginx
    network_mode: "host"
    ports:
      - "8801:8801"

volumes:
  mysql:
  mongo:
  redis:
  zoo_data:
  zoo_log:
  kafka:
